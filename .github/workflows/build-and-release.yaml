name: build-and-release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  issues: write

jobs:
  test:
    uses: ./.github/workflows/check-lgpo.yml

  build:
    needs: test
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build Package
        shell: pwsh
        run: choco pack

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: "*.nupkg"

      - name: Extract package info (id, version, release notes)
        id: package-info
        shell: pwsh
        run: |
          # Resolve nuspec
          $nuspecPath = if (Test-Path "lgpo.nuspec") { "lgpo.nuspec" } else { (Get-ChildItem -Filter *.nuspec | Select-Object -First 1).FullName }
          if (-not $nuspecPath) { throw "No .nuspec file found." }

          # Parse nuspec
          [xml]$nuspec = Get-Content -LiteralPath $nuspecPath
          $id      = [string]$nuspec.package.metadata.id
          $version = [string]$nuspec.package.metadata.version

          # releaseNotes can be a *string* (simple element) or an XmlElement (complex)
          $rnNode = $nuspec.package.metadata.releaseNotes
          $releaseNotes = ""
          if ($null -ne $rnNode) {
            if ($rnNode -is [string]) {
              $releaseNotes = $rnNode.Trim()
            } elseif ($rnNode.PSObject.TypeNames -contains 'System.Xml.XmlElement') {
              $releaseNotes = ($rnNode.InnerText | Out-String).Trim()
            } else {
              $releaseNotes = ($rnNode | Out-String).Trim()
            }
          }

          # Compose final body *here* to avoid YAML expression pitfalls
          $defaultBody = "Release of $id version $version"
          $ghBody = if ([string]::IsNullOrWhiteSpace($releaseNotes)) { $defaultBody } else { $releaseNotes }

          # Outputs
          "package-id=$id"            >> $env:GITHUB_OUTPUT
          "package-version=$version"  >> $env:GITHUB_OUTPUT

          # Multiline-safe output for the body
          "body<<__EOF__"             >> $env:GITHUB_OUTPUT
          $ghBody                     >> $env:GITHUB_OUTPUT
          "__EOF__"                   >> $env:GITHUB_OUTPUT

      - name: Create GitHub Release
        if: ${{ github.ref_type == 'tag' }}
        uses: softprops/action-gh-release@v2
        with:
          files: "*.nupkg"
          name: "${{ steps.package-info.outputs['package-id'] }} v${{ steps.package-info.outputs['package-version'] }}"
          body: ${{ steps.package-info.outputs.body }}
          # If you want to *append* to an existing release body instead of overwrite:
          # append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
